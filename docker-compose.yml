version: "3.8"

services:
  api-db:
    image: mysql:latest
    container_name: api-db
    environment:
      MYSQL_ROOT_PASSWORD: ${DATABASE_PASSWORD}
      MYSQL_DATABASE: ${DATABASE_NAME}
      MYSQL_USER: ${DATABASE_USER}
      MYSQL_PASSWORD: ${DATABASE_PASSWORD}
    ports:
      - "${DATABASE_API_PORT}:3306"
    volumes:
      - ./db_data:/var/lib/mysql
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik-network"
      - "traefik.http.routers.api-db.rule=Host(`$${DOMAIN_NAME}`) && PathPrefix(`/api-db`)"
      - "traefik.http.routers.api-db.entrypoints=websecure"
      - "traefik.http.routers.api-db.tls.certresolver=myresolver"
      - "traefik.http.services.api-db.loadbalancer.server.port=3306"
    networks:
      - traefik-network

  data-db:
    image: mysql:latest
    container_name: data-db
    environment:
      MYSQL_ROOT_PASSWORD: ${DATABASE_PASSWORD}
      MYSQL_DATABASE: ${DATABASE_NAME}
      MYSQL_USER: ${DATABASE_USER}
      MYSQL_PASSWORD: ${DATABASE_PASSWORD}
    ports:
      - "${DATABASE_DATA_PORT}:3306"
    volumes:
      - ./db_files:/var/lib/mysql
      - ./init-db-data.sql:/docker-entrypoint-initdb.d/init-db.sql
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik-network"
      - "traefik.http.routers.data-db.rule=Host(`$${DOMAIN_NAME}`) && PathPrefix(`/data-db`)"
      - "traefik.http.routers.data-db.entrypoints=websecure"
      - "traefik.http.routers.data-db.tls.certresolver=myresolver"
      - "traefik.http.services.data-db.loadbalancer.server.port=3306"
    networks:
      - traefik-network

  db-filler:
    build: .
    container_name: db-filler
    depends_on:
      - api-db
      - data-db
    environment:
      DATABASE_HOST: api-db
      DATABASE_USER: ${DATABASE_USER}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_API_PORT: ${DATABASE_API_PORT}
      DATABASE_DATA_PORT: ${DATABASE_DATA_PORT}
    command: ["sh", "-c", "npm run data:generate && npm run data:etl"]
    networks:
      - traefik-network

networks:
  traefik-network:
    external: true